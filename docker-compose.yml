services:
  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - storasense-network

  tinyauth:
    image: ghcr.io/steveiliop56/tinyauth:v3
    container_name: tinyauth
    restart: unless-stopped
    env_file: .env
    networks:
      - storasense-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tinyauth.entrypoints=web"
      - "traefik.http.routers.tinyauth.rule=Host(`tinyauth.storasense.de`)"
      - "traefik.http.services.tinyauth.loadbalancer.server.port=80"

  app:
    build:
      context: .
      dockerfile: ./backend/src/app/Dockerfile
    env_file: .env
    restart: always
    networks:
      - storasense-network
    depends_on:
      - timescaledb
      - tinyauth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.routers.app.rule=Host(`api.storasense.de`)"
      - "traefik.http.services.app.loadbalancer.server.port=8000"


  mqtt-client:
    build:
      context: .
      dockerfile: ./backend/src/mqtt_client/Dockerfile
    env_file: .env
    restart: always
    networks:
      - storasense-network
    depends_on:
      - app

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - storasense_data_volume:/var/lib/postgresql/data
    networks:
      - storasense-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    restart: always
    networks:
      - storasense-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`storasense.de`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - app

volumes:
  storasense_data_volume:

networks:
  storasense-network:
    driver: bridge
