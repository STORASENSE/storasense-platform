@startuml
!theme vibrant
top to bottom direction

package "Edge / Datenerfassung" {
  cloud "IoT-Geräte\n(Sensoren, Aktoren ("Imaginär"))" as devices
  component "MQTT Broker" as mqtt
}

package "Streaming-Plattform (Kafka)" {
  frame "Apache Kafka Cluster" {
    queue "Topic 'iot-sensordata'" as topic_raw
    queue "Topic 'alarme'" as topic_alarms
  }

  package "Kafka Connect" {
    component "MQTT Source Connector\n(Daten -> Kafka)" as connect_source
    component "OPTIONAL: MQTT Sink Connector\n(Kafka -> Geräte)" as connect_sink
  }

  package "Alarm-Analyse" {
    component "Alarmservice\n(Kafka Streams)" as alarmservice
  }
}



' Datenfluss: Aufnahme → Analyse → Alarm
devices --> mqtt : 1. Sensordaten (MQTT)
mqtt --> connect_source : 2. Abonniert Topics
connect_source --> topic_raw : 3. Rohdaten schreiben

topic_raw --> alarmservice : 4. Konsumiert (key = sensorId)
alarmservice --> topic_alarms : 5. Schreibt Alarme (JSON + Metadaten)

' Alarm-Konsum


' Optionaler Rückkanal (Commanding der Aktoren)
topic_alarms --> connect_sink : 8. Konsumiert Alarme/Befehle
connect_sink --> mqtt : 9. Schreibt Befehle (MQTT)
mqtt --> devices : OPTIONAL: \n 10. Aktor bekommt MQTT-Message

@enduml
